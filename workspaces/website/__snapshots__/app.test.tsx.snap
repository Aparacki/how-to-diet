// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> renders 1`] = `
<SentryErrorBoundary>
  <ThemeProvider
    theme={
      Object {
        "colors": Object {
          "default": Object {
            "hex": "#56687C",
            "rgb": "86, 104, 124",
            "rgba": [Function],
            "toString": [Function],
          },
          "icon": Object {
            "hex": "#ccc",
            "rgb": "0, 12, 204",
            "rgba": [Function],
            "toString": [Function],
          },
          "meta": Object {
            "hex": "#999999",
            "rgb": "153, 153, 153",
            "rgba": [Function],
            "toString": [Function],
          },
          "negative": Object {
            "hex": "#EB5757",
            "rgb": "235, 87, 87",
            "rgba": [Function],
            "toString": [Function],
          },
          "positive": Object {
            "hex": "#26c344",
            "rgb": "38, 195, 68",
            "rgba": [Function],
            "toString": [Function],
          },
          "primary": Object {
            "hex": "#494de4",
            "rgb": "73, 77, 228",
            "rgba": [Function],
            "toString": [Function],
          },
          "ui": Object {
            "hex": "#d3d7e0",
            "rgb": "211, 215, 224",
            "rgba": [Function],
            "toString": [Function],
          },
        },
        "contentWidth": "960px",
        "radius": "5px",
        "spacing": Object {
          "lg": "48px",
          "sm": "16px",
          "toString": [Function],
          "xl": "64px",
          "xs": "8px",
          "xxl": "128px",
          "xxs": "4px",
        },
        "width": Object {
          "l": "720px",
          "lg": "1024px",
          "sm": "650px",
          "toString": [Function],
          "xl": "1300px",
          "xs": "480px",
        },
      }
    }
  >
    <Provider
      store={
        Object {
          "documentStore": Object {
            "documentFilter": "all",
            "documents": Array [],
            "invitations": Array [],
            "invitationsInputs": Array [],
            "selected": undefined,
            "signatures": Array [],
            "uid": 0,
          },
          "formStore": Object {
            "forms": Array [],
          },
          "modal": Object {
            "active": undefined,
          },
          "signStore": Object {
            "completed": false,
            "documentId": null,
            "invitationKey": null,
            "pages": Array [],
            "pending": false,
            "ready": false,
            "signatures": Array [],
            "status": null,
            "uploadingSignature": false,
          },
          "userStore": Object {
            "documents": Array [],
            "invitations": Array [],
            "pending": Object {},
            "profile": null,
            "selected": undefined,
            "signatures": Array [],
            "token": "",
          },
        }
      }
    >
      <BrowserRouter>
        <React.Fragment>
          <Switch>
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />
            <Route
              component={[Function]}
              path="/dashboard"
            />
            <Route
              component={[Function]}
              path="/profile"
            />
            <Route
              component={[Function]}
              path="/document"
            />
            <Route
              component={[Function]}
              path="/auth/login"
            />
            <Route
              component={[Function]}
              path="/auth/register"
            />
            <Route
              component={[Function]}
              path="/auth/logout"
            />
            <Route
              component={[Function]}
              path="/auth/reset"
            />
            <Route
              component={[Function]}
              path="/auth/update"
            />
            <Route
              component={[Function]}
            />
          </Switch>
          <Unknown />
        </React.Fragment>
      </BrowserRouter>
    </Provider>
  </ThemeProvider>
</SentryErrorBoundary>
`;
